{"version":3,"sources":["components/Good/Good.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["Good","good","GoodList","goods","map","goodsFromServer","APPLIED_SORT_ALPHABETICALLY","APPLIED_SORT_LENGTH","App","useState","appliedSort","setAppliedSort","reverseOrder","setReverseOrder","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"uPAIaA,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnC,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAMA,KAAMA,GAAWA,SCAhBI,EAA+B,CAC1C,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA8B,iBAC9BC,EAAsB,SA8BrB,IAAMC,EAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAOMC,EArCR,SACEX,EADF,GAGa,IADTO,EACQ,EADRA,YAAaE,EACL,EADKA,aAETE,EAAY,YAAOX,GAqBzB,OAnBIO,GACFI,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKJ,EACH,OAAOU,EAAME,cAAcD,GAE7B,KAAKV,EACH,OAAOS,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXP,GACFE,EAAaM,UAGRN,EAY0BO,CAAehB,EAC9C,CAAEK,cAAaE,iBAEjB,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYd,IAAgBJ,IAChCmB,QAAS,kBAAMd,EAAeL,IAJhC,iCASA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYd,IAAgBH,IAChCkB,QAAS,kBAAMd,EAAeJ,IAJhC,4BASA,wBACEgB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAAaZ,IACjBa,QAAS,kBAAMZ,GAAiBD,IAJlC,sBASEF,GAAeE,IACf,wBACEW,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAzCjBd,EAAe,SACfE,GAAgB,IAqCV,sBAWJ,cAAC,EAAD,CAAUV,MAAOW,QCvGvBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6b03670a.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = { good: string };\n\nexport const Good: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import React from 'react';\nimport { Good } from '../Good/Good';\n\ntype Props = { goods: string[] };\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <Good good={good} key={good} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport { GoodList } from './components/GoodsList';\nimport { FilteredGoods } from './types/FilteredGoods';\nimport { ProductList } from './types/ProductList';\n\nexport const goodsFromServer: ProductList = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst APPLIED_SORT_ALPHABETICALLY = 'alphabetically';\nconst APPLIED_SORT_LENGTH = 'length';\n\nfunction getSortedGoods(\n  goods: ProductList,\n  { appliedSort, reverseOrder }: FilteredGoods,\n): string[] {\n  const visibleGoods = [...goods];\n\n  if (appliedSort) {\n    visibleGoods.sort((good1, good2) => {\n      switch (appliedSort) {\n        case APPLIED_SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case APPLIED_SORT_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseOrder) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [appliedSort, setAppliedSort] = useState('');\n  const [reverseOrder, setReverseOrder] = useState(false);\n\n  const reset = () => {\n    setAppliedSort('');\n    setReverseOrder(false);\n  };\n\n  const visibleGoods:ProductList = getSortedGoods(goodsFromServer,\n    { appliedSort, reverseOrder });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': appliedSort !== APPLIED_SORT_ALPHABETICALLY })}\n          onClick={() => setAppliedSort(APPLIED_SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': appliedSort !== APPLIED_SORT_LENGTH })}\n          onClick={() => setAppliedSort(APPLIED_SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reverseOrder })}\n          onClick={() => setReverseOrder(!reverseOrder)}\n        >\n          Reverse\n        </button>\n\n        {(appliedSort || reverseOrder) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}