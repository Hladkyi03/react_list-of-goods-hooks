{"version":3,"sources":["types/SortVariants.ts","components/Good/Good.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortVariants","Good","good","GoodList","goods","map","goodsFromServer","App","useState","appliedSort","setAppliedSort","isReversed","setIsReversed","visibleGoods","useMemo","sort","good1","good2","APPLIED_SORT_ALPHABETICALLY","localeCompare","APPLIED_SORT_LENGTH","length","reverse","getSortedGoods","className","type","cn","onClick","prev","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,0ECICC,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnC,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAMA,KAAMA,GAAWA,U,SFRjBF,K,6CAAAA,E,6BAAAA,E,SAAAA,M,KGSL,IAAMM,EAA+B,CAC1C,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+BK,IAAMC,EAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAeMC,EAAeC,mBAAQ,WAC3B,OA9CJ,SACEV,EADF,GAGa,IADTK,EACQ,EADRA,YAAaE,EACL,EADKA,WAETE,EAAY,YAAOT,GAqBzB,OAnBIK,GACFI,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKT,EAAakB,4BAChB,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAAaoB,oBAChB,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,GACFE,EAAaS,UAGRT,EAqBEU,CAAejB,EAAiB,CAAEG,cAAaE,iBACrD,CAACL,EAAiBG,EAAaE,IAElC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CACE,WAAYjB,IACVT,EAAakB,8BAEnBS,QAlBgB,WACtBjB,EAAeV,EAAakB,8BAUxB,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYjB,IAAgBT,EAAaoB,sBAC7CO,QAAS,kBAAMjB,EAAeV,EAAaoB,sBAJ7C,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAAaf,IACjBgB,QAxCmB,WACzBf,GAAc,SAAAgB,GAAI,OAAKA,MAmCnB,sBASEnB,GAAeE,IACf,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAtDe,WACvBjB,EAAe,IACfE,GAAc,IAiDR,sBAWJ,cAAC,EAAD,CAAUR,MAAOS,QCjHvBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ea173c6.chunk.js","sourcesContent":["export enum SortVariants {\n  APPLIED_SORT_ALPHABETICALLY = 'alphabetically',\n  APPLIED_SORT_LENGTH = 'length',\n  NONE = '',\n}\n","import React from 'react';\n\ntype Props = { good: string };\n\nexport const Good: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import React from 'react';\nimport { Good } from '../Good/Good';\n\ntype Props = { goods: string[] };\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <Good good={good} key={good} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { GoodList } from './components/GoodsList';\nimport { FilteredGoods } from './types/FilteredGoods';\nimport { ProductList } from './types/ProductList';\nimport { SortVariants } from './types/SortVariants';\n\nexport const goodsFromServer: ProductList = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getSortedGoods(\n  goods: ProductList,\n  { appliedSort, isReversed }: FilteredGoods,\n): string[] {\n  const visibleGoods = [...goods];\n\n  if (appliedSort) {\n    visibleGoods.sort((good1, good2) => {\n      switch (appliedSort) {\n        case SortVariants.APPLIED_SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SortVariants.APPLIED_SORT_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [appliedSort, setAppliedSort] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleResetClick = () => {\n    setAppliedSort('');\n    setIsReversed(false);\n  };\n\n  const handleReverseClick = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const handleSortClick = () => {\n    setAppliedSort(SortVariants.APPLIED_SORT_ALPHABETICALLY);\n  };\n\n  const visibleGoods = useMemo(() => {\n    return getSortedGoods(goodsFromServer, { appliedSort, isReversed });\n  }, [goodsFromServer, appliedSort, isReversed]);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            {\n              'is-light': appliedSort\n            !== SortVariants.APPLIED_SORT_ALPHABETICALLY,\n            })}\n          onClick={handleSortClick}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': appliedSort !== SortVariants.APPLIED_SORT_LENGTH })}\n          onClick={() => setAppliedSort(SortVariants.APPLIED_SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {(appliedSort || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetClick}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}